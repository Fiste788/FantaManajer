{
    "name": "fiste788/fantamanajer",
    "description": "FantaManajer API backend written in PHP",
    "license": "MIT",
    "type": "project",
    "homepage": "https://fantamanajer.it",
    "require": {
        "php": ">=8.1",
        "burzum/cakephp-service-layer": "^2.0",
        "cakephp/authentication": "^2.0",
        "cakephp/authorization": "^2.0",
        "cakephp/cakephp": "^4.4",
        "cakephp/plugin-installer": "^1.3",
        "cnizzardini/cakephp-preloader": "^0.1.5",
        "fiste788/cake-scheduler": "^4.2.0",
        "friendsofcake/crud": "^6.0.0",
        "get-stream/stream": "^6.0",
        "josegonzalez/cakephp-upload": "^7.0",
        "spatie/image": "^2.0",
        "spomky-labs/web-push-lib": "^2.0.0",
        "symfony/css-selector": "^6.0",
        "symfony/dom-crawler": "^6.0",
        "symfony/uid": "^6.0",
        "web-auth/webauthn-lib": "^4.2",
        "web-token/jwt-key-mgmt": "^3.0",
        "web-token/jwt-signature-algorithm-ecdsa": "^3.0",
        "web-token/jwt-signature-algorithm-eddsa": "^3.0",
        "web-token/jwt-signature-algorithm-rsa": "^3.0",
        "whichbrowser/parser": "^2.0"
    },
    "require-dev": {
        "cakephp/bake": "^2.6",
        "cakephp/cakephp-codesniffer": "^5.0",
        "cakephp/debug_kit": "^4.5",
        "cakephp/migrations": "^3.2",
        "cakephp/repl": "^0.1",
        "dereuromark/cakephp-ide-helper": "^1.0.0",
        "ergebnis/composer-normalize": "^2.13",
        "josegonzalez/dotenv": "^3.2",
        "mirko-pagliai/cakephp-database-backup": "^2.8",
        "phpstan/phpstan": "^1.2",
        "phpunit/phpunit": "~8.5.0 || ^9.3",
        "vimeo/psalm": "^5.4"
    },
    "suggest": {
        "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan compatibility.",
        "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
        "phpstan/phpstan": "PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code."
    },
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/fiste788/cake-scheduler.git"
        }
    ],
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "App\\": "src/",
            "StreamCake\\": "plugins/StreamCake/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Test\\": "tests/",
            "Cake\\Test\\": "vendor/cakephp/cakephp/tests/",
            "StreamCake\\Test\\": "plugins/StreamCake/tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "composer/package-versions-deprecated": true,
            "ergebnis/composer-normalize": true,
            "cakephp/plugin-installer": true
        },
        "optimize-autoloader": true,
        "sort-packages": true
    },
    "scripts": {
        "post-install-cmd": "App\\Console\\Installer::postInstall",
        "post-create-project-cmd": "App\\Console\\Installer::postInstall",
        "check": [
            "@test",
            "@cs-check"
        ],
        "cs-check": "phpcs --colors -p  src/ tests/",
        "cs-fix": "phpcbf --colors -p src/ tests/",
        "psalm": "psalm",
        "stan": "phpstan analyse --memory-limit=-1 --xdebug",
        "test": "phpunit --colors=always",
        "test:all": [
            "composer test:unit",
            "composer test:typing",
            "composer test:syntax"
        ],
        "test:syntax": "@cs-fix",
        "test:typing": "@stan",
        "test:unit": "@test"
    }
}