{
    "name": "Fiste788/fantamanajer",
    "description": "FantaManajer api backend written in php",
    "homepage": "https://fantamanajer.it",
    "type": "project",
    "license": "MIT",
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/fiste788/crunz"
        },
        {
            "type": "vcs",
            "url": "https://github.com/fiste788/cake-scheduler"
        }
    ],
    "require": {
        "php": ">=7.1",
        "admad/cakephp-jwt-auth": "^2.0",
        "burzum/cakephp-service-layer": "dev-master",
        "cakephp/authentication": "dev-master",
        "cakephp/authorization": "dev-master",
        "cakephp/cakephp": "3.7.*",
        "cakephp/migrations": "^2.0",
        "cakephp/plugin-installer": "^1.0",
        "fiste788/cake-scheduler": "dev-master as 1.0",
        "friendsofcake/crud": "^5.4",
        "get-stream/stream": "^2.7",
        "josegonzalez/cakephp-upload": "^4.0",
        "josegonzalez/dotenv": "3.*",
        "lavary/crunz": "^1.5.1",
        "minishlink/web-push": "^4.0",
        "mirko-pagliai/me-tools": "^2.18",
        "mobiledetect/mobiledetectlib": "2.*",
        "ozee31/cakephp-cors": "^1.1",
        "spatie/image": "^1.5",
        "symfony/css-selector": "^4.0",
        "symfony/dom-crawler": "^4.0",
        "web-auth/webauthn-lib": "^1.1"
    },
    "require-dev": {
        "cakephp/bake": "^1.7",
        "cakephp/cakephp-codesniffer": "^3.0",
        "cakephp/debug_kit": "^3.15.0",
        "dereuromark/cakephp-ide-helper": "^0.11.1",
        "mirko-pagliai/cakephp-database-backup": "^2.6",
        "phpunit/phpunit": "^5.7|^6.0",
        "psy/psysh": "@stable"
    },
    "suggest": {
        "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
        "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan compatibility.",
        "phpunit/phpunit": "Allows automated tests to be run without system-wide install.",
        "cakephp/cakephp-codesniffer": "Allows to check the code against the coding standards used in CakePHP."
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/",
            "StreamCake\\": "./plugins/StreamCake/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Test\\": "tests/",
            "Cake\\Test\\": "./vendor/cakephp/cakephp/tests/",
            "StreamCake\\Test\\": "./plugins/StreamCake/tests/"
        }
    },
    "scripts": {
        "post-install-cmd": "App\\Console\\Installer::postInstall",
        "post-create-project-cmd": "App\\Console\\Installer::postInstall",
        "post-autoload-dump": "Cake\\Composer\\Installer\\PluginInstaller::postAutoloadDump",
        "check": [
            "@test",
            "@cs-check"
        ],
        "cs-check": "phpcs --colors -p --standard=vendor/cakephp/cakephp-codesniffer/CakePHP src tests",
        "cs-fix": "phpcbf --colors --standard=vendor/cakephp/cakephp-codesniffer/CakePHP src tests",
        "test": "phpunit --colors=always"
    },
    "config": {
        "sort-packages": true
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
