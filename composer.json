{
    "name": "fiste788/fantamanajer",
    "description": "FantaManajer API backend written in PHP",
    "homepage": "https://fantamanajer.it",
    "type": "project",
    "license": "MIT",
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/commercial-hippie/cakephp-upload.git"
        },
        {
            "type": "vcs",
            "url": "https://github.com/fiste788/cakephp-service-layer.git"
        }
    ],
    "require": {
        "php": ">=7.2",
        "burzum/cakephp-service-layer": "^2.0",
        "cakephp/authentication": "^2.0",
        "cakephp/authorization": "^2.0",
        "cakephp/cakephp": "^4.0",
        "cakephp/plugin-installer": "^1.2",
        "fiste788/cake-scheduler": "^4.0",
        "friendsofcake/crud": "^6.0.0-beta2",
        "get-stream/stream": "^4.0",
        "josegonzalez/cakephp-upload": "cake-4.x-dev#6cb59c5e79a018fc95d13804b48c10d7a5a90f3a",
        "minishlink/web-push": "^5.0",
        "mobiledetect/mobiledetectlib": "^2.8",
        "ramsey/uuid": "^3.8",
        "spatie/image": "^1.7",
        "symfony/css-selector": "^5.0",
        "symfony/dom-crawler": "^5.0",
        "web-auth/webauthn-lib": "^3.0",
        "whichbrowser/parser": "^2.0"
    },
    "require-dev": {
        "cakephp/bake": "^2.0.3",
        "cakephp/cakephp-codesniffer": "~4.0.0",
        "cakephp/debug_kit": "^4.0",
        "cakephp/migrations": "^3.0",
        "dereuromark/cakephp-ide-helper": "^1.0.0",
        "josegonzalez/dotenv": "^3.2",
        "mirko-pagliai/cakephp-database-backup": "^2.8",
        "phpstan/phpstan": "^0.12",
        "phpunit/phpunit": "^8.5.0",
        "psy/psysh": "@stable",
        "vimeo/psalm": "^3.7"
    },
    "suggest": {
        "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
        "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan compatibility.",
        "phpstan/phpstan": "PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code."
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/",
            "StreamCake\\": "plugins/StreamCake/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Test\\": "tests/",
            "Cake\\Test\\": "vendor/cakephp/cakephp/tests/",
            "StreamCake\\Test\\": "plugins/StreamCake/tests/"
        }
    },
    "scripts": {
        "post-install-cmd": "App\\Console\\Installer::postInstall",
        "post-create-project-cmd": "App\\Console\\Installer::postInstall",
        "post-autoload-dump": "Cake\\Composer\\Installer\\PluginInstaller::postAutoloadDump",
        "check": [
            "@test",
            "@cs-check"
        ],
        "cs-check": "phpcs --colors -p --standard=vendor/cakephp/cakephp-codesniffer/CakePHP src/ tests/",
        "cs-fix": "phpcbf --colors --standard=vendor/cakephp/cakephp-codesniffer/CakePHP src/ tests/",
        "stan": "phpstan analyse src/",
        "test": "phpunit --colors=always"
    },
    "config": {
        "sort-packages": true,
        "optimize-autoloader": true
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
